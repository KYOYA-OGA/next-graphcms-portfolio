import Head from 'next/head';
import { request, GraphQLClient, gql } from 'graphql-request';
import Link from 'next/link';
import { getPostsAndPortfolios } from '../lib/data';
import Image from 'next/image';
import Hero from '../components/Hero';

export const getStaticProps = async () => {
  const data = await getPostsAndPortfolios();
  return {
    props: {
      data,
    },
  };
};

export default function Home({ data }) {
  // console.log(data);
  return (
    <div>
      <Head>
        <title>Awesome Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container max-w-3xl mx-auto px-4">
        <Hero />
        <div className="space-y-5">
          {data?.portfolios.map((item) => {
            return (
              <article key={item.slug}>
                <Link href={`/portfolio/${item.slug}`}>
                  <a>
                    <div className="relative overflow-hidden">
                      <div className="absolute w-full h-full z-10 opacity-80 bg-gray-800"></div>
                      <div className="absolute w-full h-full z-20 flex flex-col justify-center items-center text-center px-4">
                        <h3 className="text-2xl font-semibold">{item.title}</h3>
                        <p className="mt-4 text-lg leading-relaxed">
                          {item.description}
                        </p>
                        <div className="mt-4 space-x-4">
                          {item.tags.map((tag) => {
                            return (
                              <span className="btn btn-accent" key={tag}>
                                {tag}
                              </span>
                            );
                          })}
                        </div>
                      </div>
                      <Image
                        src={item.coverImage.url}
                        height={item.coverImage.height}
                        width={item.coverImage.width}
                        alt={item.title}
                        className="w-full h-full object-cover"
                        layout="responsive"
                      />
                    </div>
                  </a>
                </Link>
              </article>
            );
          })}
        </div>

        <div className="mt-5 lg:mt-10 ">
          {data?.posts.map((post) => {
            return (
              <div
                className="grid grid-cols-1 md:grid-cols-4 py-6"
                key={post.slug}
              >
                <div className="mb-2 mb:mb-0 md:col-span-1">
                  <p className=" text-sm">
                    {new Date(post.date).toDateString()}
                  </p>
                </div>
                <div className="md:col-span-3">
                  <Link href={`/blog/${post.slug}`}>
                    <a className="text-2xl font-semibold link-primary">
                      {post.title}
                    </a>
                  </Link>
                  <p className=" leading-relaxed">{post.description}</p>
                  <p className="text-sm  font-semibold mt-1">
                    {post.author.name}
                  </p>
                </div>
              </div>
            );
          })}
        </div>
      </main>
    </div>
  );
}
